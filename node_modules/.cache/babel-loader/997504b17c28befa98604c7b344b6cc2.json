{"ast":null,"code":"var _jsxFileName = \"/home/yehia/Documents/openclassroom projects/restaurant/src/components/RestaurantList.js\";\nimport React from 'react';\nimport Modal from 'react-awesome-modal';\nconst removedElements = [];\n\nclass RestaurantList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showReviews = reviewIndex => {\n      let reviewbox;\n      fetch('https://cors-anywhere.herokuapp.com/' + 'https://maps.googleapis.com/maps/api/place/details/json?placeid=' + this.props.restaurants[reviewIndex].place_id + '&key=AIzaSyAR14v1v6okXPc5QrZwvsmMbaHktnQ0M5I').then(response => response.json()).then(data => {\n        var cloneObj = this.state.reviewsMap;\n        cloneObj[this.props.restaurants[reviewIndex].place_id] = data.result.reviews;\n        this.setState({\n          reviewsMap: cloneObj\n        }, () => {\n          const reviews = this.state.reviewsMap[this.props.restaurants[reviewIndex].place_id];\n          console.log(myArr);\n\n          for (let index = 0; index < reviews.length; index++) {\n            console.log(reviews[index]);\n            reviewbox = \"<div class='review-box'><div class='review-info'>Author: \" + reviews[index].author_name + \"<br/>Rate: \" + reviews[index].rating + \"</div><p class='review-comment'>\" + reviews[index].text + \"</p></div>\";\n            document.getElementById(\"reviewList\").innerHTML += reviewbox;\n          } // this.setState({reviewsMap: [ ...this.state.reviewsMap, this.props.restaurants[index].place_id:reviewbox],});\n\n        });\n      });\n    };\n\n    this.addReview = index => {\n      if (typeof this.state.reviewsMap[this.props.restaurants[index].place_id] === \"undefined\") {\n        this.showReviews(index);\n        console.log(this.state.reviewsMap);\n      } else {\n        document.getElementById(\"reviewList\").innerHTML += this.state.reviewsMap[this.props.restaurants[index].place_id];\n      }\n\n      this.openModal();\n      document.getElementById(\"index\").innerHTML = index;\n    };\n\n    this.removeListElement = () => {\n      for (let i = 0; i < removedElements.length; i++) {\n        document.getElementById(removedElements[i]).setAttribute(\"display\", \"none\");\n      }\n    };\n\n    this.makeReview = index => {\n      console.log(\"console review  ahoo  ooo debug\");\n      const review = document.getElementById(\"new_review\").value;\n      this.addToList(index, review);\n      this.addToPreviousReviews(index, review);\n    };\n\n    this.addToList = (index, review) => {\n      document.getElementById(this.props.restaurants[index].place_id).innerHTML = \"<div className='restaurant-review-box'><p className='restaurant-review-name'>\" + this.props.restaurants[index].name + \"</p><p className='restaurant-review-rating'>rate: \" + parseFloat((parseFloat(review) + this.props.restaurants[index].rating) / 2) + \"</p><p className='restaurant-review-raters'>no. Of Reviewers:  \" + parseInt(this.props.restaurants[index].user_ratings_total + 1) + \"</p></div>\";\n      this.getReviewDetails(this.props.restaurants[index].place_id);\n      this.props.restaurants[index].rating = parseFloat((parseFloat(review) + this.props.restaurants[index].rating) / 2);\n      this.props.restaurants[index].user_ratings_total = this.props.restaurants[index].user_ratings_total + 1;\n    };\n\n    this.addToPreviousReviews = (index, review) => {\n      const name = document.getElementById(\"feedback-name\").value;\n      const comment = document.getElementById(\"feedback_comment\").value;\n      let reviewbox = \"<div class='review-box'><div class='review-info'>Author: \" + name + \"<br/>Rate: \" + review + \"</div><p class='review-comment'>\" + comment + \"</p></div>\";\n      document.getElementById(\"reviewList\").innerHTML += reviewbox;\n      var addedReview = {\n        rating: review,\n        text: 'Some comment',\n        author_name: 'Anonymous'\n      };\n      let reviewMapClone = this.state.reviewsMap;\n      reviewMapClone[this.props.restaurants[index].place_id].push(addedReview);\n      this.setState({\n        reviewsMap: reviewMapClone\n      });\n    };\n\n    this.state = {\n      visible: false,\n      reviews: [],\n      reviewsMap: {}\n    };\n  }\n\n  getReviewDetails(id) {\n    fetch('https://cors-anywhere.herokuapp.com/' + 'https://maps.googleapis.com/maps/api/place/details/json?placeid=' + id + '&key=AIzaSyAR14v1v6okXPc5QrZwvsmMbaHktnQ0M5I').then(response => response.json()).then(data => {\n      console.log(data);\n    });\n  }\n\n  openModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  render() {\n    const items = this.props.restaurants.map((obj, index) => React.createElement(\"li\", {\n      id: obj.place_id,\n      key: index,\n      onClick: () => this.addReview(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, typeof obj.rating !== \"undefined\" ? React.createElement(\"div\", {\n      className: \"restaurant-review-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"restaurant-review-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, obj.name), React.createElement(\"p\", {\n      className: \"restaurant-review-rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"rate:  \", obj.rating), React.createElement(\"p\", {\n      className: \"restaurant-review-raters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"no. Of Reviewers:  \", obj.user_ratings_total)) : \"\"), this);\n    return React.createElement(\"div\", {\n      className: \"map-list pt-2 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Available Restaurant:\"), React.createElement(\"ul\", {\n      id: \"restaurantsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, items), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      visible: this.state.visible,\n      width: \"1000\",\n      height: \"500\",\n      effect: \"fadeInUp\",\n      onClickAway: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-5 place-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        display: \"none\"\n      },\n      id: \"index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"review-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group  reviewer-email-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"feedback-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Your Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control reviewer-email\",\n      id: \"feedback-name\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Enter Your User Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group  reviewer-score-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"new_review\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Submit your feedback from 0 to 5\"), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"form-control reviewer-score\",\n      id: \"new_review\",\n      min: \"0\",\n      max: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group reviewer-comment-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"feedback_comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Leave a comment\"), React.createElement(\"textarea\", {\n      className: \"form-control \",\n      id: \"feedback_comment\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        this.closeModal();\n        console.log(document.getElementById(\"index\").innerHTML);\n        this.makeReview(document.getElementById(\"index\").innerHTML);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \" Submit Review\")), React.createElement(\"div\", {\n      className: \"reviews-List\",\n      id: \"reviewList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"reviews-List-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Previous reviews\"))))));\n  }\n\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["/home/yehia/Documents/openclassroom projects/restaurant/src/components/RestaurantList.js"],"names":["React","Modal","removedElements","RestaurantList","Component","constructor","props","showReviews","reviewIndex","reviewbox","fetch","restaurants","place_id","then","response","json","data","cloneObj","state","reviewsMap","result","reviews","setState","console","log","myArr","index","length","author_name","rating","text","document","getElementById","innerHTML","addReview","openModal","removeListElement","i","setAttribute","makeReview","review","value","addToList","addToPreviousReviews","name","parseFloat","parseInt","user_ratings_total","getReviewDetails","comment","addedReview","reviewMapClone","push","visible","id","closeModal","render","items","map","obj","display"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport Modal from 'react-awesome-modal';\n\nconst removedElements = []\nclass RestaurantList extends React.Component {\n  constructor(props) {\n       super(props);\n       this.state = {\n            visible : false,\n            reviews:[],\n            reviewsMap: {}\n        }\n\n   }\n  getReviewDetails(id){\n         fetch('https://cors-anywhere.herokuapp.com/' + 'https://maps.googleapis.com/maps/api/place/details/json?placeid='+id + '&key=AIzaSyAR14v1v6okXPc5QrZwvsmMbaHktnQ0M5I')\n        .then(response=>response.json()).then(data =>{\n          console.log(data);\n        })\n}\n\n   openModal() {\n           this.setState({\n               visible : true\n           });\n       };\n\n       closeModal() {\n           this.setState({\n               visible : false\n           });\n       };\n    showReviews = (reviewIndex) =>\n    {\n      let reviewbox;\n      fetch('https://cors-anywhere.herokuapp.com/' + 'https://maps.googleapis.com/maps/api/place/details/json?placeid='+this.props.restaurants[reviewIndex].place_id + '&key=AIzaSyAR14v1v6okXPc5QrZwvsmMbaHktnQ0M5I')\n     .then(response=>response.json()).then(data =>{\n      var cloneObj = this.state.reviewsMap;\n      cloneObj[this.props.restaurants[reviewIndex].place_id] = data.result.reviews\n       this.setState({\n        reviewsMap:  cloneObj,\n      },()=>{\n\n        const reviews =  this.state.reviewsMap[this.props.restaurants[reviewIndex].place_id];\n        console.log(myArr)\n        for(let index = 0; index < reviews.length;index++){\n          console.log(reviews[index])\n            reviewbox = \"<div class='review-box'><div class='review-info'>Author: \"+ reviews[index].author_name +\"<br/>Rate: \"+reviews[index].rating   +\"</div><p class='review-comment'>\"+ reviews[index].text +\"</p></div>\";\n           document.getElementById(\"reviewList\").innerHTML += reviewbox;\n        }\n\n\n        // this.setState({reviewsMap: [ ...this.state.reviewsMap, this.props.restaurants[index].place_id:reviewbox],});\n\n\n      })\n\n\n   })\n\n   }\n\n\n\n\n   addReview = (index)=>{\n     if( typeof  this.state.reviewsMap[this.props.restaurants[index].place_id] === \"undefined\" ){\n        this.showReviews(index);\n        console.log(this.state.reviewsMap)\n     }\n     else{\n         document.getElementById(\"reviewList\").innerHTML += this.state.reviewsMap[this.props.restaurants[index].place_id];\n     }\n     this.openModal();\n     document.getElementById(\"index\").innerHTML = index;\n   };\n   removeListElement = ()=>{\n     for(let i = 0; i < removedElements.length; i++ ){\n       document.getElementById(removedElements[i]).setAttribute(\"display\", \"none\");\n     }\n   }\n   makeReview = (index)=>{\n     console.log(\"console review  ahoo  ooo debug\")\n     const review = document.getElementById(\"new_review\").value;\n      this.addToList(index,review);\n      this.addToPreviousReviews(index,review);\n   }\n  addToList = (index,review) =>{\n    document.getElementById(this.props.restaurants[index].place_id).innerHTML =  \"<div className='restaurant-review-box'><p className='restaurant-review-name'>\"+ this.props.restaurants[index].name  +\"</p><p className='restaurant-review-rating'>rate: \"+ parseFloat((parseFloat(review)+this.props.restaurants[index].rating)/2)+ \"</p><p className='restaurant-review-raters'>no. Of Reviewers:  \"+ parseInt(this.props.restaurants[index].user_ratings_total+1)+ \"</p></div>\";\n    this.getReviewDetails(this.props.restaurants[index].place_id)\n    this.props.restaurants[index].rating =  parseFloat((parseFloat(review)+this.props.restaurants[index].rating)/2);\n    this.props.restaurants[index].user_ratings_total = this.props.restaurants[index].user_ratings_total + 1;\n  }\n  addToPreviousReviews = (index,review) =>{\n    const name = document.getElementById(\"feedback-name\").value;\n    const comment = document.getElementById(\"feedback_comment\").value;\n    let reviewbox = \"<div class='review-box'><div class='review-info'>Author: \"+ name +\"<br/>Rate: \"+review  +\"</div><p class='review-comment'>\"+ comment +\"</p></div>\"\n    document.getElementById(\"reviewList\").innerHTML += reviewbox;\n    var addedReview = {\n      rating: review,\n      text: 'Some comment',\n      author_name: 'Anonymous'\n       };\n     let reviewMapClone = this.state.reviewsMap;\n     reviewMapClone[this.props.restaurants[index].place_id].push(addedReview)\n    this.setState({\n      reviewsMap: reviewMapClone,\n    })\n  }\n  render() {\n\n      const items =  this.props.restaurants.map((obj,index) =>\n       <li id={obj.place_id}  key={index} onClick={()=> this.addReview(index)} >\n{typeof   obj.rating !== \"undefined\" ?\n        <div className=\"restaurant-review-box\">\n          <p className=\"restaurant-review-name\">{obj.name}</p>\n          <p className=\"restaurant-review-rating\">rate:  {obj.rating}</p>\n          <p className=\"restaurant-review-raters\">no. Of Reviewers:  {obj.user_ratings_total}</p>\n        </div>\n         : \"\"  }\n       </li>,this);\n\n\n      return (\n\n              <div className=\"map-list pt-2 text-left\">\n                <h6 className=\"ml-2\">Available Restaurant:</h6>\n                <ul id=\"restaurantsList\">\n                    {items}\n                </ul>\n\n              {/* add review modal  */}\n              <section>\n                     <Modal visible={this.state.visible} width=\"1000\" height=\"500\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\n                            <div className=\"p-5 place-details\">\n                              <span style={{display:\"none\"}} id=\"index\"></span>\n                              <div className=\"review-form\">\n                                <div className=\"form-group  reviewer-email-box\">\n                                      <label htmlFor=\"feedback-name\">Your Name</label>\n                                      <input type=\"text\" className=\"form-control reviewer-email\" id=\"feedback-name\" aria-describedby=\"emailHelp\" placeholder=\"Enter Your User Name\" required />\n                                </div>\n\n                                <div className=\"form-group  reviewer-score-box\">\n                                      <label htmlFor=\"new_review\">Submit your feedback from 0 to 5</label>\n                                      <input type=\"number\" className=\"form-control reviewer-score\" id=\"new_review\" min=\"0\" max=\"5\" />\n                                </div>\n\n                                <div className=\"form-group reviewer-comment-box\">\n                                    <label htmlFor=\"feedback_comment\">Leave a comment</label>\n                                    <textarea className=\"form-control \" id=\"feedback_comment\" rows=\"3\"></textarea>\n                                  </div>\n                                  <button className=\"btn btn-primary\"  onClick={() => {\n                                      this.closeModal();\n                                      console.log(document.getElementById(\"index\").innerHTML);\n                                      this.makeReview(document.getElementById(\"index\").innerHTML);\n\n                                    }}> Submit Review</button>\n                                </div>\n                                 <div className=\"reviews-List\" id=\"reviewList\">\n                                      <h4 className=\"reviews-List-title\">Previous reviews</h4>\n                                 </div>\n                            </div>\n                      </Modal>\n                </section>\n              </div>\n\n\n      );\n  }\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}