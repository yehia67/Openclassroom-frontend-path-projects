{"ast":null,"code":"var _jsxFileName = \"/home/yehia/Documents/openclassroom projects/restaurant/src/components/RestaurantList.js\";\nimport React from 'react';\nimport Modal from 'react-awesome-modal';\nimport localRestaurants from \"./localRestaurants.json\";\nconst removedElements = [];\n\nclass RestaurantList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showReviews = reviewIndex => {\n      fetch('https://cors-anywhere.herokuapp.com/' + 'https://maps.googleapis.com/maps/api/place/details/json?placeid=' + this.props.restaurants[reviewIndex].place_id + '&key=AIzaSyAUXi44xrkwClTtmRDXvbR9egoGX86XTpE').then(response => response.json()).then(data => {\n        console.log(data);\n\n        if (data.status === \"INVALID_REQUEST\") {\n          for (let index = 0; index < localRestaurants.length; index++) {\n            if (this.props.restaurants[reviewIndex].place_id === localRestaurants[index].place_id) {\n              data = localRestaurants[index];\n              break;\n            }\n          }\n        }\n\n        const reviews = this.state.reviewsMap[this.props.restaurants[reviewIndex].place_id];\n\n        if (typeof reviews === 'undefined') {\n          this.getApiReviews(reviewIndex, data);\n        } else {\n          if (this.state.reviewsMap.length < data.result.reviews.length) {\n            this.getApiReviews(reviewIndex, data);\n          } else {\n            this.getNewReviews(reviewIndex, data);\n          }\n        }\n      });\n    };\n\n    this.getApiReviews = (reviewIndex, data) => {\n      var cloneObj = this.state.reviewsMap;\n      cloneObj[this.props.restaurants[reviewIndex].place_id] = data.result.reviews;\n      this.setState({\n        reviewsMap: cloneObj\n      }, () => {\n        const reviews = this.state.reviewsMap[this.props.restaurants[reviewIndex].place_id];\n        document.getElementById(\"reviewList\").innerHTML = '<h4 className=\"reviews-List-title\">Previous reviews</h4>';\n\n        for (let index = 0; index < reviews.length; index++) {\n          let reviewbox = \"<div class='review-box'><div class='review-info'>Author: \" + reviews[index].author_name + \"<br/>Rate: \" + reviews[index].rating + \"</div><p class='review-comment'>\" + reviews[index].text + \"</p></div>\";\n          document.getElementById(\"reviewList\").innerHTML += reviewbox;\n        }\n      });\n    };\n\n    this.getNewReviews = reviewIndex => {\n      const reviews = this.state.reviewsMap[this.props.restaurants[reviewIndex].place_id];\n      document.getElementById(\"reviewList\").innerHTML = '<h4 className=\"reviews-List-title\">Previous reviews</h4>';\n\n      for (let index = 0; index < reviews.length; index++) {\n        let reviewbox = \"<div class='review-box'><div class='review-info'>Author: \" + reviews[index].author_name + \"<br/>Rate: \" + reviews[index].rating + \"</div><p class='review-comment'>\" + reviews[index].text + \"</p></div>\";\n        document.getElementById(\"reviewList\").innerHTML += reviewbox;\n      }\n    };\n\n    this.addReview = index => {\n      console.log(\"index el hnaaa\", index);\n      document.getElementById(\"index\").innerHTML = index;\n      this.showReviews(index);\n      console.log(this.state.reviewsMap);\n      this.openModal();\n    };\n\n    this.removeListElement = () => {\n      for (let i = 0; i < removedElements.length; i++) {\n        document.getElementById(removedElements[i]).setAttribute(\"display\", \"none\");\n      }\n    };\n\n    this.makeReview = index => {\n      console.log(\"console review  ahoo  ooo debug\");\n      const review = document.getElementById(\"new_review\").value;\n      this.addToList(index, review);\n      this.addToPreviousReviews(index, review);\n    };\n\n    this.addToList = (index, review) => {\n      document.getElementById(this.props.restaurants[index].place_id).innerHTML = \"<div className='restaurant-review-box'><p className='restaurant-review-name'>\" + this.props.restaurants[index].name + \"</p><p className='restaurant-review-rating'>rate: \" + parseFloat((parseFloat(review) + parseFloat(this.props.restaurants[index].rating)) / 2) + \"</p><p className='restaurant-review-raters'>no. Of Reviewers:  \" + parseInt(this.props.restaurants[index].user_ratings_total + 1) + \"</p></div>\";\n      this.getReviewDetails(this.props.restaurants[index].place_id);\n      this.props.restaurants[index].rating = parseFloat((parseFloat(review) + this.props.restaurants[index].rating) / 2);\n      this.props.restaurants[index].user_ratings_total = this.props.restaurants[index].user_ratings_total + 1;\n    };\n\n    this.addToPreviousReviews = (index, review) => {\n      const name = document.getElementById(\"feedback-name\").value;\n      const comment = document.getElementById(\"feedback_comment\").value;\n      var addedReview = {\n        rating: review,\n        text: comment,\n        author_name: name\n      };\n      let reviewMapClone = this.state.reviewsMap;\n      reviewMapClone[this.props.restaurants[index].place_id].push(addedReview);\n      this.setState({\n        reviewsMap: reviewMapClone\n      }, () => {\n        let reviewbox = \"<div class='review-box'><div class='review-info'>Author: \" + name + \"<br/>Rate: \" + review + \"</div><p class='review-comment'>\" + comment + \"</p></div>\";\n        document.getElementById(\"reviewList\").innerHTML += reviewbox;\n        const reviews = this.state.reviewsMap[this.props.restaurants[index].place_id];\n      });\n    };\n\n    this.state = {\n      visible: false,\n      reviews: [],\n      reviewsMap: {}\n    };\n  }\n\n  getReviewDetails(id) {\n    fetch('https://cors-anywhere.herokuapp.com/' + 'https://maps.googleapis.com/maps/api/place/details/json?placeid=' + id + '&key=AIzaSyAUXi44xrkwClTtmRDXvbR9egoGX86XTpE').then(response => response.json()).then(data => {\n      console.log(data);\n    });\n  }\n\n  openModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  render() {\n    const items = this.props.restaurants.map((obj, index) => React.createElement(\"li\", {\n      id: obj.place_id,\n      key: index,\n      onClick: () => this.addReview(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, typeof obj.rating !== \"undefined\" ? React.createElement(\"div\", {\n      className: \"restaurant-review-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"restaurant-review-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, obj.name), React.createElement(\"p\", {\n      className: \"restaurant-review-rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"rate:  \", obj.rating), React.createElement(\"p\", {\n      className: \"restaurant-review-raters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"no. Of Reviewers:  \", obj.user_ratings_total)) : \"\"), this);\n    return React.createElement(\"div\", {\n      className: \"map-list pt-2 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Available Restaurant:\"), React.createElement(\"div\", {\n      className: \"filterBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"first-no\",\n      type: \"number\",\n      min: \"0\",\n      max: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"second-no\",\n      type: \"number\",\n      min: \"0\",\n      max: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.filterReviews(items);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"filter \")), React.createElement(\"ul\", {\n      id: \"restaurantsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, items), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      visible: this.state.visible,\n      width: \"1000\",\n      height: \"500\",\n      effect: \"fadeInUp\",\n      onClickAway: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-5 place-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        display: \"none\"\n      },\n      id: \"index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"review-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group  reviewer-email-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"feedback-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Your Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control reviewer-email\",\n      id: \"feedback-name\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Enter Your User Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group  reviewer-score-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"new_review\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Submit your feedback from 0 to 5\"), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"form-control reviewer-score\",\n      id: \"new_review\",\n      min: \"0\",\n      max: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group reviewer-comment-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"feedback_comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Leave a comment\"), React.createElement(\"textarea\", {\n      className: \"form-control \",\n      id: \"feedback_comment\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        this.closeModal();\n        this.makeReview(document.getElementById(\"index\").innerHTML);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \" Submit Review\")), React.createElement(\"div\", {\n      className: \"reviews-List\",\n      id: \"reviewList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"reviews-List-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Previous reviews\"))))));\n  }\n\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["/home/yehia/Documents/openclassroom projects/restaurant/src/components/RestaurantList.js"],"names":["React","Modal","localRestaurants","removedElements","RestaurantList","Component","constructor","props","showReviews","reviewIndex","fetch","restaurants","place_id","then","response","json","data","console","log","status","index","length","reviews","state","reviewsMap","getApiReviews","result","getNewReviews","cloneObj","setState","document","getElementById","innerHTML","reviewbox","author_name","rating","text","addReview","openModal","removeListElement","i","setAttribute","makeReview","review","value","addToList","addToPreviousReviews","name","parseFloat","parseInt","user_ratings_total","getReviewDetails","comment","addedReview","reviewMapClone","push","visible","id","closeModal","render","items","map","obj","filterReviews","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-awesome-modal';\nimport localRestaurants from \"./localRestaurants.json\";\n\nconst removedElements = []\nclass RestaurantList extends React.Component {\n  constructor(props) {\n       super(props);\n       this.state = {\n            visible : false,\n            reviews:[],\n            reviewsMap: {}\n        }\n   }\n  getReviewDetails(id){\n         fetch('https://cors-anywhere.herokuapp.com/' + 'https://maps.googleapis.com/maps/api/place/details/json?placeid='+id + '&key=AIzaSyAUXi44xrkwClTtmRDXvbR9egoGX86XTpE')\n        .then(response=>response.json()).then(data =>{\n          console.log(data);\n        })\n   }\n  openModal() {\n    this.setState({\n      visible : true\n    });\n  };\n\n  closeModal() {\n    this.setState({\n      visible : false\n    });\n  };  \n\n  showReviews = (reviewIndex) =>{\n      fetch('https://cors-anywhere.herokuapp.com/' + 'https://maps.googleapis.com/maps/api/place/details/json?placeid='+this.props.restaurants[reviewIndex].place_id + '&key=AIzaSyAUXi44xrkwClTtmRDXvbR9egoGX86XTpE')\n     .then(response=>response.json()).then(data =>{\n       console.log(data)  \n        if (data.status === \"INVALID_REQUEST\") {\n        for (let index = 0; index < localRestaurants.length; index++) {\n          if(this.props.restaurants[reviewIndex].place_id === localRestaurants[index].place_id)\n            {\n                  data = localRestaurants[index];\n                  break;\n            }\n          }   \n       }    \n       const reviews =  this.state.reviewsMap[this.props.restaurants[reviewIndex].place_id]\n       if(typeof reviews === 'undefined' ){\n\n         this.getApiReviews(reviewIndex,data)\n       }else{\n         if(this.state.reviewsMap.length < data.result.reviews.length){\n                 this.getApiReviews(reviewIndex,data)\n          }\n          else{ this.getNewReviews(reviewIndex,data)  }\n      }\n\n       })\n   }\n\n  getApiReviews = (reviewIndex,data) =>{\n    var cloneObj = this.state.reviewsMap;\n    cloneObj[this.props.restaurants[reviewIndex].place_id] = data.result.reviews;\n    this.setState({\n      reviewsMap:  cloneObj\n    },()=>{\n      const reviews =  this.state.reviewsMap[this.props.restaurants[reviewIndex].place_id];\n      document.getElementById(\"reviewList\").innerHTML = '<h4 className=\"reviews-List-title\">Previous reviews</h4>'\n      for(let index = 0; index < reviews.length;index++){\n          let reviewbox = \"<div class='review-box'><div class='review-info'>Author: \"+ reviews[index].author_name +\"<br/>Rate: \"+reviews[index].rating   +\"</div><p class='review-comment'>\"+ reviews[index].text +\"</p></div>\";\n        document.getElementById(\"reviewList\").innerHTML += reviewbox;\n      }\n    })\n  };\n  getNewReviews = (reviewIndex)  =>{\n    const reviews =  this.state.reviewsMap[this.props.restaurants[reviewIndex].place_id];\n    document.getElementById(\"reviewList\").innerHTML = '<h4 className=\"reviews-List-title\">Previous reviews</h4>'\n    for(let index = 0; index < reviews.length;index++){\n        let reviewbox = \"<div class='review-box'><div class='review-info'>Author: \"+ reviews[index].author_name +\"<br/>Rate: \"+reviews[index].rating   +\"</div><p class='review-comment'>\"+ reviews[index].text +\"</p></div>\";\n      document.getElementById(\"reviewList\").innerHTML += reviewbox;\n    }\n  }\n\n    addReview = (index)=>{\n      console.log(\"index el hnaaa\",index)\n      document.getElementById(\"index\").innerHTML = index;\n      this.showReviews(index);\n      console.log(this.state.reviewsMap)\n      this.openModal();\n\n    };\n    removeListElement = ()=>{\n      for(let i = 0; i < removedElements.length; i++ ){\n        document.getElementById(removedElements[i]).setAttribute(\"display\", \"none\");\n      }\n    }\n    makeReview = (index)=>{\n      console.log(\"console review  ahoo  ooo debug\")\n      const review = document.getElementById(\"new_review\").value;\n        this.addToList(index,review);\n        this.addToPreviousReviews(index,review);\n    }\n    addToList = (index,review) =>{\n      document.getElementById(this.props.restaurants[index].place_id).innerHTML =  \"<div className='restaurant-review-box'><p className='restaurant-review-name'>\"+ this.props.restaurants[index].name  +\"</p><p className='restaurant-review-rating'>rate: \"+ parseFloat((parseFloat(review)+parseFloat(this.props.restaurants[index].rating))/2)+ \"</p><p className='restaurant-review-raters'>no. Of Reviewers:  \"+ parseInt(this.props.restaurants[index].user_ratings_total+1)+ \"</p></div>\";\n      this.getReviewDetails(this.props.restaurants[index].place_id)\n      this.props.restaurants[index].rating =  parseFloat((parseFloat(review)+this.props.restaurants[index].rating)/2);\n      this.props.restaurants[index].user_ratings_total = this.props.restaurants[index].user_ratings_total + 1;\n    }\n    addToPreviousReviews = (index,review) =>{\n      const name = document.getElementById(\"feedback-name\").value;\n      const comment = document.getElementById(\"feedback_comment\").value;\n      var addedReview = {\n        rating: review,\n        text: comment,\n        author_name: name\n        };\n      let reviewMapClone = this.state.reviewsMap;\n      reviewMapClone[this.props.restaurants[index].place_id].push(addedReview)\n      this.setState({\n        reviewsMap: reviewMapClone,\n      },()=>{\n        let reviewbox = \"<div class='review-box'><div class='review-info'>Author: \"+ name +\"<br/>Rate: \"+review  +\"</div><p class='review-comment'>\"+ comment +\"</p></div>\"\n        document.getElementById(\"reviewList\").innerHTML += reviewbox;\n        const reviews =  this.state.reviewsMap[this.props.restaurants[index].place_id];\n      })\n    };\n  render() {\n\n      const items =  this.props.restaurants.map((obj,index) =>\n       <li id={obj.place_id}  key={index} onClick={()=> this.addReview(index)} >\n      {typeof   obj.rating !== \"undefined\" ?\n        <div className=\"restaurant-review-box\">\n          <p className=\"restaurant-review-name\">{obj.name}</p>\n          <p className=\"restaurant-review-rating\">rate:  {obj.rating}</p>\n          <p className=\"restaurant-review-raters\">no. Of Reviewers:  {obj.user_ratings_total}</p>\n        </div>\n         : \"\"  }\n       </li>,this);\n      return (\n              <div className=\"map-list pt-2 text-left\">\n                <h6 className=\"ml-2\">Available Restaurant:</h6>\n                <div className=\"filterBox\">\n                  <input id=\"first-no\" type=\"number\" min=\"0\" max=\"5\" />\n                  <input id=\"second-no\" type=\"number\" min=\"0\" max=\"5\"  />\n                  <button onClick= {() => {this.props.filterReviews(items)}}>filter </button>\n                </div>\n                <ul id=\"restaurantsList\">\n                    {items}\n                </ul>\n\n              {/* add review modal  */}\n              <section>\n                     <Modal visible={this.state.visible} width=\"1000\" height=\"500\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\n                            <div className=\"p-5 place-details\">\n                              <span style={{display:\"none\"}} id=\"index\"></span>\n                              <div className=\"review-form\">\n                                <div className=\"form-group  reviewer-email-box\">\n                                      <label htmlFor=\"feedback-name\">Your Name</label>\n                                      <input type=\"text\" className=\"form-control reviewer-email\" id=\"feedback-name\" aria-describedby=\"emailHelp\" placeholder=\"Enter Your User Name\" required />\n                                </div>\n\n                                <div className=\"form-group  reviewer-score-box\">\n                                      <label htmlFor=\"new_review\">Submit your feedback from 0 to 5</label>\n                                      <input type=\"number\" className=\"form-control reviewer-score\" id=\"new_review\" min=\"0\" max=\"5\" />\n                                </div>\n\n                                <div className=\"form-group reviewer-comment-box\">\n                                    <label htmlFor=\"feedback_comment\">Leave a comment</label>\n                                    <textarea className=\"form-control \" id=\"feedback_comment\" rows=\"3\"></textarea>\n                                  </div>\n                                  <button className=\"btn btn-primary\"  onClick={() => {\n                                      this.closeModal();\n                                      this.makeReview(document.getElementById(\"index\").innerHTML);\n\n                                    }}> Submit Review</button>\n                                </div>\n                                 <div className=\"reviews-List\" id=\"reviewList\">\n                                      <h4 className=\"reviews-List-title\">Previous reviews</h4>\n                                 </div>\n                            </div>\n                      </Modal>\n                </section>\n              </div>\n      );\n  }\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}