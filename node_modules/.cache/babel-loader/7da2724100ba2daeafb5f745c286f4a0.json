{"ast":null,"code":"var _jsxFileName = \"/home/yehia/Documents/openclassroom projects/restaurant/src/components/RestaurantBox.js\";\nimport React from 'react';\nimport MapDiv from './MapDiv.js';\nimport '../App.css';\nimport RestaurantList from './RestaurantList.js';\nimport localRestaurants from \"./localRestaurants.json\";\n\nclass RestaurantBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterReviews = () => {\n      const filtredRestaurants = [];\n      let items = this.state.restaurants;\n      const firstNo = parseFloat(document.getElementById(\"first-no\").value);\n      const secondNo = parseFloat(document.getElementById(\"second-no\").value);\n      let max, min;\n\n      if (firstNo > secondNo) {\n        max = firstNo;\n        min = secondNo;\n      } else if (firstNo < secondNo) {\n        max = secondNo;\n        min = firstNo;\n      }\n\n      for (let index = 0; index < items.length; index++) {\n        if (items[index].rating === \"\") {\n          continue;\n        }\n\n        if (items[index].rating >= min && items[index].rating <= max) {\n          document.getElementById(items[index].place_id).style.display = \"block\";\n          filtredRestaurants.push(items[index]);\n        } else {\n          document.getElementById(items[index].place_id).style.display = \"none\";\n        }\n      }\n\n      this.setState({\n        filterMarker: filtredRestaurants\n      });\n    };\n\n    this.state = {\n      Latitude: 1,\n      Longitude: 1,\n      filterMarker: [],\n      restaurants: []\n    };\n  }\n\n  componentDidMount() {\n    const success = pos => {\n      var crd = pos.coords;\n      this.setState({\n        Latitude: crd.latitude,\n        Longitude: crd.longitude\n      }, () => {\n        fetch('https://cors-anywhere.herokuapp.com/' + 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=' + this.state.Latitude + ',' + this.state.Longitude + '&radius=150000&type=restaurant&key=AIzaSyAUXi44xrkwClTtmRDXvbR9egoGX86XTpE').then(response => response.json()).then(data => {\n          console.log(data);\n          console.log(localRestaurants);\n\n          for (let index = 0; index < localRestaurants.length; index++) {\n            data.results.push(localRestaurants[index]);\n          }\n\n          this.setState({\n            restaurants: data.results,\n            filterMarker: data.results\n          });\n        });\n      });\n    };\n\n    const error = err => {\n      console.warn(\"ERROR(\".concat(err.code, \"): \").concat(err.message));\n    };\n\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"map-box row align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.restaurants !== [] ? React.createElement(MapDiv, {\n      restaurants: this.state.restaurants,\n      filterMarker: this.state.filterMarker,\n      Latitude: this.state.Latitude,\n      Longitude: this.state.Longitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }) : null, this.state.Latitude !== 1 ? React.createElement(RestaurantList, {\n      restaurants: this.state.restaurants,\n      filterReviews: this.filterReviews,\n      Latitude: this.state.Latitude,\n      Longitude: this.state.Longitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default RestaurantBox;","map":{"version":3,"sources":["/home/yehia/Documents/openclassroom projects/restaurant/src/components/RestaurantBox.js"],"names":["React","MapDiv","RestaurantList","localRestaurants","RestaurantBox","Component","constructor","props","filterReviews","filtredRestaurants","items","state","restaurants","firstNo","parseFloat","document","getElementById","value","secondNo","max","min","index","length","rating","place_id","style","display","push","setState","filterMarker","Latitude","Longitude","componentDidMount","success","pos","crd","coords","latitude","longitude","fetch","then","response","json","data","console","log","results","error","err","warn","code","message","navigator","geolocation","getCurrentPosition","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MapDiv from './MapDiv.js';\nimport '../App.css';\nimport RestaurantList from './RestaurantList.js';\nimport localRestaurants from \"./localRestaurants.json\";\n\n\nclass RestaurantBox extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          Latitude:1,\n          Longitude:1,\n          filterMarker: [],\n          restaurants: [],\n      }\n  }\n\n  filterReviews = () => {\n      const filtredRestaurants = []\n      let items = this.state.restaurants;\n      const firstNo = parseFloat(document.getElementById(\"first-no\").value);\n      const secondNo = parseFloat(document.getElementById(\"second-no\").value);\n    \n      let max,min;\n      if(firstNo > secondNo){\n        max = firstNo;\n        min = secondNo;\n      }\n      else if(firstNo < secondNo){\n        max = secondNo;\n        min = firstNo;\n      }\n      for(let index = 0; index < items.length; index++){\n        if(items[index].rating === \"\"){\n          continue;\n        }\n        if(items[index].rating >= min && items[index].rating <= max){\n         document.getElementById(items[index].place_id).style.display = \"block\";\n         filtredRestaurants.push(items[index])\n\n        }\n        else{\n          document.getElementById(items[index].place_id).style.display = \"none\";\n        }\n      }\n      this.setState({\n        filterMarker:filtredRestaurants\n      });\n   };\n  componentDidMount() {\n    const success = (pos) => {\n      var crd = pos.coords;\n      this.setState({\n        Latitude: crd.latitude,\n        Longitude: crd.longitude\n      },()=> {\n        fetch('https://cors-anywhere.herokuapp.com/'+'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location='+this.state.Latitude +','+ this.state.Longitude + '&radius=150000&type=restaurant&key=AIzaSyAUXi44xrkwClTtmRDXvbR9egoGX86XTpE')\n       .then(response=>response.json()).then(data =>{\n         console.log(data);\n         console.log(localRestaurants)\n         for (let index = 0; index < localRestaurants.length; index++) {\n                data.results.push(localRestaurants[index]); \n         }  \n         this.setState({\n           restaurants: data.results,\n           filterMarker:data.results\n         });\n\n       })\n\n      })\n\n    };\n\n    const error = (err) => {\n      console.warn(`ERROR(${err.code}): ${err.message}`);\n    };\n\n    navigator.geolocation.getCurrentPosition(success, error);\n\n\n}\n\n\n  render() {\n    return (\n\n      <div className=\"map-box row align-items-center\" >\n\n      {this.state.restaurants !== []?\n        <MapDiv  restaurants={this.state.restaurants} filterMarker={this.state.filterMarker}  Latitude={this.state.Latitude} Longitude={this.state.Longitude} /> : null}\n\n\n       {this.state.Latitude !== 1?  <RestaurantList restaurants={this.state.restaurants} filterReviews = {this.filterReviews}  Latitude={this.state.Latitude} Longitude={this.state.Longitude} />: null}\n\n\n\n    </div>\n\n    );\n  }\n}\n\nexport default RestaurantBox;\n"]},"metadata":{},"sourceType":"module"}